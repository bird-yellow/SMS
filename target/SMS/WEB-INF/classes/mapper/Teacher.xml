<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sun.Dao.TeacherDao">
    <resultMap id="ResultMapTeacher" type="com.sun.Entity.Teacher">
        <id property="id" column="t_id" jdbcType="INTEGER"/>
        <result property="username" column="t_username" jdbcType="VARCHAR"/>
        <result property="password" column="t_password" jdbcType="VARCHAR"/>
        <result property="phone" column="t_phone" jdbcType="VARCHAR"/>
        <result property="cId" column="t_cId" jdbcType="INTEGER"/>
        <result property="gId" column="t_gId" jdbcType="INTEGER"/>
        <result property="dpId" column="t_dpId" jdbcType="INTEGER"/>
        <result property="crId" column="t_crId" jdbcType="INTEGER"/>
        <association property="clazz" column="t_cId" select="com.sun.Dao.ClazzDao.load"/>
        <association property="grade" column="t_gId" select="com.sun.Dao.GradeDao.load"/>
        <association property="deparment" column="t_dpId" select="com.sun.Dao.DeparmentDao.load"/>
        <association property="course" column="t_crId" select="com.sun.Dao.CourseDao.load"/>
    </resultMap>

    <sql id="Teacher_field">
                    t_id,t_username,t_password,t_phone,t_cId,t_gId,t_dpId,t_crId
            </sql>

    <sql id="Teacher_insert">
                    #{id},#{username},#{password},#{phone},#{cId},#{gId},#{dpId},#{crId}
    </sql>

    <sql id="Teacher_where">
        <if test="id != null and id !=''">and t_id=#{id}</if>
        <if test="username != null and username !=''">and t_username=#{t_username}</if>
        <if test="password != null and password !=''">and password=#{t_password}</if>
        <if test="phone != null and phone != null">and phone=#{t_phone}</if>
        <if test="cId != null and cId !=''">and cId=#{t_cId}</if>
        <if test="gId != null and gId !=''">and gId=#{t_gId}</if>
        <if test="dpId != null and dpId !=''">and dpId=#{t_dpId}</if>
        <if test="crId != null and crId !=''">and crId=#{t_crId}</if>
    </sql>

    <sql id="Teacher_update">
        <if test="username != null and username !=''">t_username=#{username},</if>
        <if test="password != null and password !=''">t_password=#{password},</if>
        <if test="phone != null and phone !=''">t_phone=#{phone},</if>
        <if test="cId != null and cId !=''">t_cId=#{cId},</if>
        <if test="gId != null and gId !=''">t_gId=#{gId},</if>
        <if test="dpId != null and dpId !=''">t_dpId=#{dpId},</if>
        <if test="crId != null and crId !=''">t_crId=#{crId},</if>
    </sql>

    <insert id="insert" parameterType="Teacher">
        insert <include refid="Teacher_field"></include> from teacher
    </insert>

    <delete id="deleteById" parameterType="java.lang.Integer">
                delete  from teacher
                where  t_id=#{id}
            </delete>

    <delete id="deleteByEntity" parameterType="Teacher">
        delete from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </delete>

    <delete id="deleteByMap" parameterType="java.util.Map">
        delete from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </delete>

    <update id="update" parameterType="Teacher">
        update teacher
        <set>
            <include refid="Teacher_update"></include>
        </set>
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </update>

    <update id="updateById" parameterType="Teacher">
        update teacher
        <set>
            <include refid="Teacher_update"></include>
        </set>
        where t_id=#{id}
    </update>

    <select id="listByMap" parameterType="java.util.Map" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </select>

    <select id="listAll" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
    </select>

    <select id="listAllByEntity" parameterType="Teacher" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </select>

    <select id="load" parameterType="java.lang.Integer">
        select <include refid="Teacher_field"></include> from teacher
        where t_id=#{id}
    </select>

    <select id="getById" parameterType="java.lang.Integer">
        select <include refid="Teacher_field"></include> from teacher
        where t_id=#{id}
    </select>

    <select id="getByMap" parameterType="java.util.Map" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </select>
    <select id="getByEntity" parameterType="Teacher" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </select>

    <select id="findByMap" parameterType="java.util.Map" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </select>

    <select id="findByEntity" parameterType="Teacher" resultMap="ResultMapTeacher">
        select <include refid="Teacher_field"></include> from teacher
        <where>
            <include refid="Teacher_where"></include>
        </where>
    </select>

    <!--            批量插入-->
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="false">
        insert into teacher values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.username},#{item.password},#{item.phone},#{item.cId},
            #{item.gId},#{item.dpId},#{item.crId})
        </foreach>
    </insert>
    <!--            批量更新-->
    <update id="updateBatch" parameterType="java.util.List" >
        <foreach collection="list" item="item" index="index" separator=";">
            update teacher
            <set>
                <if test="item.username != null and item.username !=''">t_username=#{item.username},</if>
                <if test="item.password != null and item.password !=''">t_password=#{item.password},</if>
                <if test="item.phone != null and item.phone !=''">t_phone=#{item.phone},</if>
                <if test="item.cId != null and item.cId !=''">t_cId=#{item.cId},</if>
                <if test="item.gId != null and item.gId !=''">t_gId=#{item.gId},</if>
                <if test="item.dpId != null and item.dpId !=''">t_dpId=#{item.dpId},</if>
                <if test="item.crId != null and item.crId !=''">t_crId=#{item.crId},</if>
            </set>
            <where>
                <if test="item.id != null and item.id !=''">t_id=#{item.id},</if>
            </where>
        </foreach>
    </update>

    <!--            执行sql语句-->
    <select id="getBySqlReturnMap" resultType="java.util.Map">
                ${sql}
            </select>

    <select id="getBySqlReturnEntity" resultMap="ResultMapTeacher">
                    ${sql}
            </select>

    <select id="listBySqlReturnMap" resultType="java.util.Map">
                ${sql}
            </select>

    <select id="listBySqlReturnEntity" resultMap="ResultMapTeacher">
                ${sql}
            </select>

    <select id="findBySqlRerturnEntity" resultMap="ResultMapTeacher">
                    ${sql}
            </select>

    <update id="updateBysql">
                ${sql}
            </update>

    <delete id="deleteBySql">
                ${sql}
            </delete>

</mapper>